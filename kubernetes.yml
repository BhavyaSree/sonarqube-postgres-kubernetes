apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: sonarqube
  name: sonarqube
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: sonarqube
  template:
    metadata:
      labels:
        run: sonarqube
    spec:
      containers:
      - env:
        - name: sonar.jdbc.username
          value: sonar
        - name: sonar.jdbc.password
          value: sonar
        - name: sonar.jdbc.url
          value: jdbc:postgresql://postgres/sonar
        image: sonarqube
        imagePullPolicy: Always
        name: sonarqube
        ports:
        - containerPort: 9000
          protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: postgres
  name: postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: postgres
  template:
    metadata:
      labels:
        run: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          value: sonar
        - name: POSTGRES_USER
          value: sonar
        - name: POSTGRES_DB
          value: sonar
        image: postgres
        imagePullPolicy: Always
        name: postgres
        ports:
        - containerPort: 5432
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: postgres
  name: postgres
  namespace: default
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    run: postgres
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: sonarqube
  name: sonarqube
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 31546
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    run: sonarqube
  sessionAffinity: None
  type: NodePort
