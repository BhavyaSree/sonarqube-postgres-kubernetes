apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
   - port: 5432
  selector:
   app: postgres
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: sonarqube
  name: sonarqube
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 31546
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    run: sonarqube
  sessionAffinity: None
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-cm
  labels:
    app: sonarqube
data:
  sonar.jdbc.username: sonar
  sonar.jdbc.password: sonar
  sonar.jdbc.url: jdbc:postgresql://postgres/sonar
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-cm
  labels:
    app: postgres
data:
  POSTGRES_DB: sonar
  POSTGRES_USER: sonar
  POSTGRES_PASSWORD: sonar
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pvc
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: sonarqube-data-pv
  labels:
    type: local
    app: sonarqube
spec:
  storageClassName: manual
  capacity:
    storage: 25Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarqube-data-pvc
  labels:
    app: sonarqube
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 25Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: sonarqube-extensions-pv
  labels:
    type: local
    app: sonarqube
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarqube-extensions-pvc
  labels:
    app: sonarqube
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: sonarqube-logs-pv
  labels:
    type: local
    app: sonarqube
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarqube-logs-pvc
  labels:
    app: sonarqube
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: sonarqube
  name: sonarqube
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: sonarqube
  template:
    metadata:
      labels:
        run: sonarqube
    spec:
      containers:
      - name: sonarqube
        image: sonarqube
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: sonarqube-cm
        ports:
        - containerPort: 9000
          protocol: TCP
        volumeMounts:
            - mountPath: /opt/sonarqube/data
              name: sonarqube-data
            - mountPath: /opt/sonarqube/logs
              name: sonarqube-logs
            - mountPath: /opt/sonarqube/extensions
              name: sonarqube-extensions
      volumes:
        - name: sonarqube-data
          persistentVolumeClaim:
            claimName: sonarqube-data-pvc
        - name: sonarqube-logs
          persistentVolumeClaim:
            claimName: sonarqube-logs-pvc
        - name: sonarqube-extensions
          persistentVolumeClaim:
            claimName: sonarqube-extensions-pvc
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-cm
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pvc
